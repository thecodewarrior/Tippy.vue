"use strict";(self.webpackChunktippy_vue=self.webpackChunktippy_vue||[]).push([[347],{3219:function(n,s,a){a.r(s),a.d(s,{data:function(){return p}});const p={key:"v-18ba7ce8",path:"/reference/custom-props.html",title:"Custom Props",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"reference/custom-props.md",git:{updatedTime:16562928e5,contributors:[{name:"Pierce Corcoran",email:"pierce.corcoran@dfstudio.com",commits:4}]}}},5950:function(n,s,a){a.r(s),a.d(s,{default:function(){return o}});const p=(0,a(6252).uE)('<h1 id="custom-props" tabindex="-1"><a class="header-anchor" href="#custom-props" aria-hidden="true">#</a> Custom Props</h1><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">TippyProp</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// standard vue prop objects</span>\n  props<span class="token operator">:</span> VueProps<span class="token punctuation">,</span>\n  <span class="token comment">// called in the vue composition setup function</span>\n  setup<span class="token operator">?</span><span class="token punctuation">(</span>props<span class="token operator">:</span> ToRefs<span class="token operator">&lt;</span>YourProps<span class="token operator">&gt;</span><span class="token punctuation">,</span> tip<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>TippyInstance <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n  <span class="token comment">// called any time the props change</span>\n  build<span class="token operator">?</span><span class="token punctuation">(</span>props<span class="token operator">:</span> ToRefs<span class="token operator">&lt;</span>YourProps<span class="token operator">&gt;</span><span class="token punctuation">,</span> options<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>TippyJsProps<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>For example:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> animation <span class="token operator">=</span> <span class="token punctuation">{</span>\n  props<span class="token operator">:</span> <span class="token punctuation">{</span>\n    tAnimation<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> String\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">build</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>tAnimation<span class="token punctuation">.</span>value <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>\n      options<span class="token punctuation">.</span>animation <span class="token operator">=</span> props<span class="token punctuation">.</span>tAnimation<span class="token punctuation">.</span>value\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// using the plugin</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>TippyPlugin<span class="token punctuation">,</span> defaultTippyProps<span class="token punctuation">,</span> defaultTippySingletonProps<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;tippy.vue&#39;</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>TippyPlugin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  tippyProps<span class="token operator">:</span> <span class="token punctuation">[</span>animation<span class="token punctuation">,</span> <span class="token operator">...</span>defaultTippyProps<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  tippySingletonProps<span class="token operator">:</span> <span class="token punctuation">[</span>animation<span class="token punctuation">,</span> <span class="token operator">...</span>defaultTippySingletonProps<span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// or adding them individually</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  TippyDirective<span class="token punctuation">,</span>\n  createTippyComponent<span class="token punctuation">,</span> defaultTippyProps<span class="token punctuation">,</span>\n  createTippySingletonComponent<span class="token punctuation">,</span> defaultTippySingletonProps\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;tippy.vue&#39;</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">&#39;tippy&#39;</span><span class="token punctuation">,</span> TippyDirective<span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;tippy&#39;</span><span class="token punctuation">,</span> <span class="token function">createTippyComponent</span><span class="token punctuation">(</span>animation<span class="token punctuation">,</span> <span class="token operator">...</span>defaultTippyProps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;tippy-singleton&#39;</span><span class="token punctuation">,</span> <span class="token function">createTippySingletonComponent</span><span class="token punctuation">(</span>animation<span class="token punctuation">,</span> <span class="token operator">...</span>defaultTippySingletonProps<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tippy</span> <span class="token attr-name">t-animation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fade<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tippy</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>You can even remove or replace existing props:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  createTippyComponent<span class="token punctuation">,</span> props\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;tippy.vue&#39;</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>\n    <span class="token string">&#39;tippy&#39;</span><span class="token punctuation">,</span>\n    <span class="token function">createTippyComponent</span><span class="token punctuation">(</span>\n        animation<span class="token punctuation">,</span>\n\n        props<span class="token punctuation">.</span>visible<span class="token punctuation">,</span>\n        props<span class="token punctuation">.</span>enabled<span class="token punctuation">,</span>\n        props<span class="token punctuation">.</span>placement<span class="token punctuation">,</span>\n        <span class="token comment">//props.onBody,</span>\n        props<span class="token punctuation">.</span>interactive<span class="token punctuation">,</span>\n        <span class="token comment">//props.trigger,</span>\n        <span class="token comment">//props.hideOnClick,</span>\n        <span class="token comment">//props.delay,</span>\n        props<span class="token punctuation">.</span>extra<span class="token punctuation">,</span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>Tippy.vue provides a couple of helper functions for creating plugins. <code>optionPlugin</code> exposes a Tippy.js option directly as a Vue prop, with an optional default value:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>optionPlugin<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;tippy.vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> animation <span class="token operator">=</span> <span class="token function">optionPlugin</span><span class="token punctuation">(</span><span class="token string">&quot;animation&quot;</span><span class="token punctuation">,</span> String<span class="token punctuation">,</span> <span class="token string">&quot;slide-in&quot;</span><span class="token punctuation">)</span>\n</code></pre></div><p><code>inferPlugin</code> is primarily used for TypeScript. It improves the code completion when creating plugins by inferring the plugin type. Otherwise, you would either have no code completion or have to manually specify the <code>props</code> type:</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token comment">// no type checking</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> animation <span class="token operator">=</span> <span class="token punctuation">{</span>\n  props<span class="token operator">:</span> <span class="token punctuation">{</span>\n    animation<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> String<span class="token punctuation">,</span>\n      required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// args are implicitly &#39;any&#39;</span>\n  <span class="token function">build</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> animation<span class="token operator">:</span> Plugin<span class="token operator">&lt;</span><span class="token punctuation">{</span>\n  <span class="token comment">// unnecessary duplication</span>\n  animation<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> PropType<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    required<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  props<span class="token operator">:</span> <span class="token punctuation">{</span>\n    animation<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> String<span class="token punctuation">,</span>\n      required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">build</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// everything is inferred</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> animation <span class="token operator">=</span> <span class="token function">inferPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  props<span class="token operator">:</span> <span class="token punctuation">{</span>\n    animation<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> String<span class="token punctuation">,</span>\n      required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">build</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div>',12),t={};var o=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:function(n,s){s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);